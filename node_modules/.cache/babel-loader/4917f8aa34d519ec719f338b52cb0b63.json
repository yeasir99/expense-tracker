{"ast":null,"code":"var _jsxFileName = \"/media/yeasir/92CC352FCC350F4B/Project-for-github/expense-tracker/src/conetx/TracketState.js\";\nimport React, { useReducer } from \"react\";\nimport * as mode from \"./actions\";\nimport reducer from \"./reducer\";\nimport trackerContext from \"./trackerContext\";\n\nconst TrackerState = ({\n  children\n}) => {\n  const initialState = {\n    transections: [],\n    income: 0,\n    expense: 0,\n    balance: 0\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    transections,\n    income,\n    expense,\n    balance\n  } = state;\n\n  const addTransection = detail => dispatch({\n    type: mode.ADD_TRANSECTION,\n    payload: detail\n  });\n\n  const countBalance = () => {\n    let earn = transections.map(trans => trans.type === \"exp\");\n    console.log(earn, transections);\n  };\n\n  return /*#__PURE__*/React.createElement(trackerContext.Provider, {\n    value: {\n      balance,\n      income,\n      expense,\n      transections,\n      addTransection,\n      countBalance\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default TrackerState;","map":{"version":3,"sources":["/media/yeasir/92CC352FCC350F4B/Project-for-github/expense-tracker/src/conetx/TracketState.js"],"names":["React","useReducer","mode","reducer","trackerContext","TrackerState","children","initialState","transections","income","expense","balance","state","dispatch","addTransection","detail","type","ADD_TRANSECTION","payload","countBalance","earn","map","trans","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC,QAAMC,YAAY,GAAG;AACnBC,IAAAA,YAAY,EAAE,EADK;AAEnBC,IAAAA,MAAM,EAAE,CAFW;AAGnBC,IAAAA,OAAO,EAAE,CAHU;AAInBC,IAAAA,OAAO,EAAE;AAJU,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACE,OAAD,EAAUI,YAAV,CAApC;AACA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA;AAAjC,MAA6CC,KAAnD;;AAEA,QAAME,cAAc,GAAIC,MAAD,IACrBF,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEd,IAAI,CAACe,eAAb;AAA8BC,IAAAA,OAAO,EAAEH;AAAvC,GAAD,CADV;;AAEA,QAAMI,YAAY,GAAG,MAAM;AACzB,QAAIC,IAAI,GAAGZ,YAAY,CAACa,GAAb,CAAkBC,KAAD,IAAWA,KAAK,CAACN,IAAN,KAAe,KAA3C,CAAX;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBZ,YAAlB;AACD,GAHD;;AAKA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,OADK;AAELF,MAAAA,MAFK;AAGLC,MAAAA,OAHK;AAILF,MAAAA,YAJK;AAKLM,MAAAA,cALK;AAMLK,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGb,QAVH,CADF;AAcD,CA/BD;;AAiCA,eAAeD,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport * as mode from \"./actions\";\nimport reducer from \"./reducer\";\nimport trackerContext from \"./trackerContext\";\n\nconst TrackerState = ({ children }) => {\n  const initialState = {\n    transections: [],\n    income: 0,\n    expense: 0,\n    balance: 0,\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { transections, income, expense, balance } = state;\n\n  const addTransection = (detail) =>\n    dispatch({ type: mode.ADD_TRANSECTION, payload: detail });\n  const countBalance = () => {\n    let earn = transections.map((trans) => trans.type === \"exp\");\n    console.log(earn, transections);\n  };\n\n  return (\n    <trackerContext.Provider\n      value={{\n        balance,\n        income,\n        expense,\n        transections,\n        addTransection,\n        countBalance,\n      }}\n    >\n      {children}\n    </trackerContext.Provider>\n  );\n};\n\nexport default TrackerState;\n"]},"metadata":{},"sourceType":"module"}